openapi: 3.0.3
info:
  version: versionNumber
  title: PingPatrol Integration Platform API
  description: An API for managing user authentications, integrations with external services/tools, and secure user reference token management for seamless SSO experiences.
  contact:
    name: API Support
    email: contact@kudostech.com
servers:
  - url: https://api.connect.kudostech.ro/v1
    description: Development server

paths:
  /monitors:
    get:
      summary: Get all monitors
      operationId: getAllMonitors
      tags:
        - monitors
      responses:
        '200':
          description: Monitors found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Monitor'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
    post:
      summary: Create a new monitor
      operationId: createMonitor
      tags:
        - monitors
      requestBody:
        description: Monitor object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMonitorRequest'
      responses:
        '201':
          description: Monitor created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /monitors/{monitorId}:
    parameters:
      - $ref: '#/components/parameters/MonitorIdPathParameter'
    get:
      summary: Get a monitor by id
      operationId: getMonitorById
      tags:
        - monitors
      responses:
        '200':
          description: Monitor found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        '404':
          description: Monitor not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
    delete:
      summary: Delete a monitor by id
      operationId: deleteMonitorById
      tags:
        - monitors
      responses:
        '204':
          description: Monitor deleted
        '404':
          description: Monitor not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
    put:
      summary: Update a monitor
      operationId: updateMonitor
      tags:
        - monitors
      requestBody:
        description: Monitor object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMonitorRequest'
      responses:
        '200':
          description: Monitor updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /monitors/{monitorId}/pause:
    parameters:
      - $ref: '#/components/parameters/MonitorIdPathParameter'
    put:
      summary: Pause a monitor by id
      operationId: pauseMonitorById
      tags:
        - monitors
      responses:
        '200':
          description: Monitor paused
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        '404':
          description: Monitor not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /monitors/{monitorId}/resume:
    parameters:
      - $ref: '#/components/parameters/MonitorIdPathParameter'
    put:
      summary: Resume a monitor by id
      operationId: resumeMonitorById
      tags:
        - monitors
      responses:
        '200':
          description: Monitor resumed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        '404':
          description: Monitor not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /monitors/{monitorId}/reset:
    parameters:
      - $ref: '#/components/parameters/MonitorIdPathParameter'
    put:
      summary: Reset a monitor by id
      operationId: resetMonitorById
      tags:
        - monitors
      responses:
        '200':
          description: Monitor reset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        '404':
          description: Monitor not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /monitors/{monitorId}/events:
    parameters:
      - $ref: '#/components/parameters/MonitorIdPathParameter'
    get:
      summary: Get all monitor events
      operationId: getAllMonitorEvents
      tags:
        - monitors
      responses:
        '200':
          description: Monitor events found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonitorEvent'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'
  /monitors/{monitorId}/probes:
    parameters:
      - $ref: '#/components/parameters/MonitorIdPathParameter'
    get:
      summary: Get all monitor probes
      operationId: getAllMonitorProbes
      tags:
        - monitors
      responses:
        '200':
          description: Monitor probes found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonitorProbes'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFC7807Problem'



components:
  parameters:
    MonitorIdPathParameter:
      name: monitorId
      in: path
      required: true
      example: 48a55ff9-9be7-42f9-b659-83a3d90666bf
      schema:
        type: string
        format: uuid
  schemas:
    Monitor:
      type: object
      description: Monitor object
      properties:
        id:
          type: string
          description: The UUID of the monitor
          example: 1a7588a5-a684-4cd7-8f98-11e660af2289
          format: uuid
        name:
          type: string
          description: The name of the monitor
          example: Monitor 1
        monitorType:
          $ref: '#/components/schemas/MonitorType'
        url:
          type: string
          description: The url of the monitor
          example: https://www.google.com
        monitoringInterval:
          type: integer
          description: The monitoring interval of the monitor
          example: 60
          minimum: 1
          maximum: 3600
        monitorTimeout:
          type: integer
          description: The monitor timeout of the monitor
          example: 60
          minimum: 1
          maximum: 3600
    CreateMonitorRequest:
      type: object
      description: Monitor object that needs to be added
      properties:
        name:
          type: string
          description: The name of the monitor
          example: Monitor 1
        monitorType:
          $ref: '#/components/schemas/MonitorType'
        url:
          type: string
          description: The url of the monitor
          example: https://www.google.com
        monitoringInterval:
          type: integer
          description: The monitoring interval of the monitor
          example: 60
          minimum: 1
          maximum: 3600
        monitorTimeout:
          type: integer
          description: The monitor timeout of the monitor
          example: 60
          minimum: 1
          maximum: 3600
    UpdateMonitorRequest:
      type: object
      description: Monitor object that needs to be added
      properties:
        name:
          type: string
          description: The name of the monitor
          example: Monitor 1
        monitorType:
          $ref: '#/components/schemas/MonitorType'
        url:
          type: string
          description: The url of the monitor
          example: https://www.google.com
        monitoringInterval:
          type: integer
          description: The monitoring interval of the monitor
          example: 60
          minimum: 1
          maximum: 3600
        monitorTimeout:
          type: integer
          description: The monitor timeout of the monitor
          example: 60
          minimum: 1
          maximum: 3600

    MonitorType:
      type: string
      enum:
        - PING
        - HTTPS

    MonitorEvent:
      type: object
      description: Monitor event object
      properties:
        id:
          type: integer
          description: The id of the monitor event
        timestamp:
          type: string
          format: date-time
          description: The timestamp of the monitor event
        status:
          $ref: '#/components/schemas/MonitorEventStatus'
        duration:
          type: integer
          description: The duration of the event
    MonitorEventStatus:
      type: string
      enum:
        - UP
        - DOWN
        - PAUSED
        - RESUMED
        - RESET
    MonitorProbes:
      type: object
      description: Monitor probes
      properties:
        id:
          type: integer
          description: The id of the monitor probe
        timestamp:
          type: string
          format: date-time
          description: The timestamp of the monitor probe
        result:
          $ref: '#/components/schemas/MonitorProbeResult'
        duration:
          type: integer
          description: The duration of the probe

    MonitorProbeResult:
      type: string
      enum:
        - SUCCESS
        - FAILURE

    ResourceUUID:
      type: object
      description: The UUID of the resource
      properties:
        id:
          type: string
          description: The UUID of the resource
          example: 1a7588a5-a684-4cd7-8f98-11e660af2289
          format: uuid
    RFC7807Problem:
      description: Detailed information on the error
      properties:
        timestamp:
          type: string
          format: date-time
          description: error time as UTC date-time
        type:
          type: string
          format: uri
          description: further information on the error
          default: 'about:blank'
        title:
          type: string
          description: error message
          example: Bad Request
        status:
          type: integer
          format: int32
          description: HTTP status code based on the following error codes (https://tools.ietf.org/html/rfc2616#section-10)
          example: 400
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
        detail:
          type: string
          description: further description of the error pattern
          example: JSON parse error
        traceId:
          type: string
          description: Trace id of the request
          example: avx1234asd
        instance:
          type: string
          format: uri
          description: calling path
        violations:
          type: array
          description: list of fields with incorrect content
          items:
            $ref: '#/components/schemas/Violation'
    Violation:
      description: description of a faulty field value
      properties:
        field:
          type: string
          description: name of the field
          example: Company.companyId
        message:
          type: string
          description: error description
          example: must be greater than or equal to 1
  examples:
    PatchArray:
      value:
        - op: "add"
          path: "/firstName"
          value: "John"
